### Code Style Pipelines ######################################################

kind: pipeline
type: docker
name: flake8

steps:
- name: flake8
  image: pyrocko-nest-debian-12
  pull: never
  commands:
  - flake8 src test examples setup.py

---

### Docs Pipelines ############################################################

kind: pipeline
type: docker
name: docs

trigger:
  branch:
    exclude:  # special branches
    - packaging
    - pip
    - conda
    - deploy-pip
    - deploy-conda
    - app

steps:
- name: build
  image: pyrocko-docs
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation . && cd doc && make html
  - python3 -m pyrocko.print_version short > build/html/version.txt

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh doc/build/html/ ${DRONE_COMMIT}/docs/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

- name: stage-www
  image: pyrocko-util
  pull: never

  when:
    branch:
    - release
    - deploy-docs

  commands:
  - maintenance/drone-rsync.sh doc/build/html/ ${DRONE_COMMIT}/docs/
  environment:
    RSYNC_HOST:
      from_secret: www-host
    RSYNC_USER:
      from_secret: www-user
    RSYNC_KEY:
      from_secret: rsync-key

- name: deploy-www
  image: pyrocko-util
  pull: never

  when:
    branch:
    - release
    - deploy-docs

  commands:
  - maintenance/drone-deploy-docs.sh
  environment:
    WWW_HOST:
      from_secret: www-host
    WWW_USER:
      from_secret: www-user
    WWW_KEY:
      from_secret: www-key

---

### Testing Pipelines #########################################################

kind: pipeline
type: docker
name: test-base

trigger:
  branch:
    exclude:  # special branches
    - packaging
    - pip
    - conda
    - docs
    - deploy-pip
    - deploy-conda
    - deploy-docs
    - release
    - app

steps:

- name: test-base
  image: pyrocko-fat-nest-debian-12
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation .
  - python3 -m coverage run --parallel-mode -m pytest -v test/base
  - for x in .coverage.* ; do mv $x $${x#.} ; done

- name: test-base-debian-11
  image: pyrocko-fat-nest-debian-11
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation .
  - python3 -m pytest -v test/base

- name: test-base-hptime
  image: pyrocko-fat-nest-debian-12
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation .
  - python3 -m pytest -v test/base
  environment:
    PYROCKO_USE_HIGH_PRECISION_TIME: 1
  when:
    branch:
    - hptime
    - candidate
  depends_on:
  - test-base

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh coverage.*  ${DRONE_COMMIT}/coverage/data/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key
  depends_on:
  - test-base-debian-11
  - test-base-hptime

---

kind: pipeline
type: docker
name: test-gf

trigger:
  branch:
    exclude:  # special branches
    - packaging
    - pip
    - conda
    - docs
    - deploy-pip
    - deploy-conda
    - deploy-docs
    - release
    - app

steps:
- name: test-gf
  image: pyrocko-fat-nest-debian-12
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation .
  - python3 -m coverage run --parallel-mode -m pytest -v test/gf
  - for x in .coverage.* ; do mv $x $${x#.} ; done

- name: test-gf-debian-11
  image: pyrocko-fat-nest-debian-11
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation .
  - python3 -m pytest -v test/gf

- name: test-gf-hptime
  image: pyrocko-fat-nest-debian-12
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation .
  - python3 -m coverage run --parallel-mode -m pytest -v test/gf
  - for x in .coverage.* ; do mv $x $${x#.} ; done
  environment:
    PYROCKO_USE_HIGH_PRECISION_TIME: 1
  when:
    branch:
    - hptime
    - candidate
  depends_on:
  - test-gf

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh coverage.*  ${DRONE_COMMIT}/coverage/data/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key
  depends_on:
  - test-gf-debian-11
  - test-gf-hptime

---

kind: pipeline
type: docker
name: test-examples

trigger:
  branch:
    exclude:  # special branches
    - packaging
    - pip
    - conda
    - docs
    - deploy-pip
    - deploy-conda
    - deploy-docs
    - release
    - app

steps:
- name: test-examples
  image: pyrocko-fat-nest-debian-12
  pull: never
  commands:
  - mkdir -p /pyrocko-test-data/example_run_dir
  - ln -sf /pyrocko-test-data/gf_stores/* /pyrocko-test-data/example_run_dir
  - pip3 install --no-deps --no-build-isolation .
  - python3 -m coverage run --parallel-mode -m pytest -v test/examples
  - for x in .coverage.* ; do mv $x $${x#.} ; done

- name: test-examples-debian-11
  image: pyrocko-fat-nest-debian-11
  pull: never
  commands:
  - mkdir -p /pyrocko-test-data/example_run_dir
  - ln -sf /pyrocko-test-data/gf_stores/* /pyrocko-test-data/example_run_dir
  - pip3 install --no-deps --no-build-isolation .
  - python3 -m pytest -v test/examples

- name: test-examples-hptime
  image: pyrocko-fat-nest-debian-12
  pull: never
  commands:
  - mkdir -p /pyrocko-test-data/example_run_dir
  - ln -sf /pyrocko-test-data/gf_stores/* /pyrocko-test-data/example_run_dir
  - pip3 install --no-deps --no-build-isolation .
  - python3 -m coverage run --parallel-mode -m pytest -v test/examples
  - for x in .coverage.* ; do mv $x $${x#.} ; done
  environment:
    PYROCKO_USE_HIGH_PRECISION_TIME: 1
  when:
    branch:
    - hptime
    - candidate
  depends_on:
  - test-examples

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh coverage.*  ${DRONE_COMMIT}/coverage/data/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key
  depends_on:
  - test-examples-debian-11
  - test-examples-hptime

---

kind: pipeline
type: docker
name: test-gui

trigger:
  branch:
    exclude:  # special branches
    - packaging
    - pip
    - conda
    - docs
    - deploy-pip
    - deploy-conda
    - deploy-docs
    - release
    - app

steps:
- name: test-gui
  image: pyrocko-fat-nest-debian-12
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation .
  - xvfb-run -s '-screen 0 640x480x24' python3 -m coverage run --parallel-mode -m pytest -v test/gui test/base/test_obspy_compat.py::ObsPyCompatTestCase::test_obspy_fiddle test/base/test_obspy_compat.py::ObsPyCompatTestCase::test_obspy_snuffle
  - for x in .coverage.* ; do mv $x $${x#.} ; done

- name: test-gui-debian-11
  image: pyrocko-fat-nest-debian-11
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation .
  - xvfb-run -s '-screen 0 640x480x24' python3 -m pytest -v test/gui test/base/test_obspy_compat.py::ObsPyCompatTestCase::test_obspy_fiddle test/base/test_obspy_compat.py::ObsPyCompatTestCase::test_obspy_snuffle

- name: test-gui-hptime
  image: pyrocko-fat-nest-debian-12
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation .
  - xvfb-run -s '-screen 0 640x480x24' python3 -m coverage run --parallel-mode -m pytest -v test/gui test/base/test_obspy_compat.py::ObsPyCompatTestCase::test_obspy_fiddle test/base/test_obspy_compat.py::ObsPyCompatTestCase::test_obspy_snuffle
  - for x in .coverage.* ; do mv $x $${x#.} ; done
  environment:
    PYROCKO_USE_HIGH_PRECISION_TIME: 1
  when:
    branch:
    - hptime
    - candidate
  depends_on:
  - test-gui

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh coverage.*  ${DRONE_COMMIT}/coverage/data/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key
  depends_on:
  - test-gui-debian-11
  - test-gui-hptime

---

kind: pipeline
type: docker
name: test-coverage

depends_on:
- test-base
- test-gf
- test-examples
- test-gui

trigger:
  branch:
    exclude:  # special branches
    - packaging
    - pip
    - conda
    - docs
    - deploy-pip
    - deploy-conda
    - deploy-docs
    - release
    - app

steps:
- name: build
  image: pyrocko-nest-debian-12
  pull: never
  commands:
  - pip3 install --no-deps --no-build-isolation .
  - wget -r -nH --cut-dirs=2 --no-parent --reject="index.html*" https://data.pyrocko.org/builds/${DRONE_COMMIT}/coverage/data/
  - python3 -m coverage combine coverage/data/coverage.*
  - python3 -m coverage html

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh htmlcov/ ${DRONE_COMMIT}/coverage/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: exec
name: test-windows

trigger:
  branch:
    exclude:  # special branches
    - packaging
    - pip
    - conda
    - docs
    - deploy-pip
    - deploy-conda
    - deploy-docs
    - release
    - app

platform:
  os: windows

steps:
- name: install-test
  commands:
  #- C:\\Windows\\System32\\cleanmgr.exe /dC
  #- Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\Lib\\site-packages\\pyrocko
  # 2024-09-24: current vtk package is incompatible with python 3.12 and using python 3.11 leads to other random dependency issues; omitting vtk
  - conda create --name test_env_${DRONE_BUILD_NUMBER} --yes python=3.12 pytest m2-tar m2-gzip m2-patch setuptools wheel numpy>=1.16 scipy>=1.0 pyyaml matplotlib requests jinja2 pyqt
  #- conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python install.py deps conda --yes
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python install.py user --yes
  - New-Item -Path test\\data -ItemType SymbolicLink -Value C:\\vagrant\\test-data
  # ensure config is there to prevent race conditions in parallel test runs
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python -m pyrocko.config
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python -m pytest -v test/base
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python -m pytest -v test/gf
  - mkdir test\\example_run_dir
  - mkdir test\\example_run_dir_local
  - New-Item -Path test\\example_run_dir\\ak135_static -ItemType SymbolicLink -Value C:\\vagrant\\test-data\\gf_stores\\ak135_static
  - New-Item -Path test\\example_run_dir\\crust2_mf -ItemType SymbolicLink -Value C:\\vagrant\\test-data\\gf_stores\\crust2_mf
  - New-Item -Path test\\example_run_dir\\gf_abruzzo_nearfield_vmod_Ameri -ItemType SymbolicLink -Value C:\\vagrant\\test-data\\gf_stores\\gf_abruzzo_nearfield_vmod_Ameri
  - New-Item -Path test\\example_run_dir\\iceland_reg_v2 -ItemType SymbolicLink -Value C:\\vagrant\\test-data\\gf_stores\\iceland_reg_v2
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python -m pytest -v test/examples
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python -m pytest -v test/gui/test_snuffler.py
- name: cleanup
  commands:
  - conda env remove --name test_env_${DRONE_BUILD_NUMBER} --yes
  when:
    status:
    - failure
    - success

---

kind: pipeline
type: exec
name: test-osx-arm64

trigger:
  branch:
    exclude:  # special branches
    - packaging
    - pip
    - conda
    - docs
    - deploy-pip
    - deploy-conda
    - deploy-docs
    - release
    - app

platform:
  os: darwin
  arch: arm64

steps:
- name: install
  commands:
  - conda create --name test_env_${DRONE_BUILD_NUMBER} --yes python=3.12 pytest
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python install.py deps conda --yes
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python install.py user --yes
  - cp -r /Users/drone/test-data test/data
  - mkdir -p test/example_run_dir
  - mkdir -p test/example_run_dir_local
  - ln -sf /Users/drone/test-data/gf_stores/* test/example_run_dir
  - ln -sf /Users/drone/test-data/gf_stores/* test/example_run_dir_local
  # ensure config is there to prevent race conditions in parallel test runs
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python -m pyrocko.config

- name: test-base
  commands:
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python -m pytest -v test/base
  depends_on:
  - install

- name: test-gf
  commands:
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python -m pytest -v test/gf
  depends_on:
  - install

- name: test-examples
  commands:
  - conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python -m pytest -v test/examples
  depends_on:
  - install

# Segfaults while trying to do offscreen testing
#- name: test-gui
#  commands:
#  - QT_QPA_PLATFORM=offscreen conda run --no-capture-output --name test_env_${DRONE_BUILD_NUMBER} python -m pytest -v test/gui
#  depends_on:
#  - install

- name: finalize
  commands: []
  depends_on:
  - test-base
  - test-gf
  - test-examples
  # - test-gui

- name: cleanup
  commands:
  - conda env remove --name test_env_${DRONE_BUILD_NUMBER} --yes
  depends_on:
  - finalize
  when:
    status:
    - failure
    - success

---

### Packaging  Pipelines ######################################################

kind: pipeline
type: docker
name: package-pip-sdist

trigger:
  branch:
  - release
  - candidate
  - packaging
  - pip
  - deploy-pip

steps:

- name: build
  image: pyrocko-nest-debian-12
  pull: never
  commands:
  - python3 setup.py sdist

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh dist/ ${DRONE_COMMIT}/dist/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

- name: upload-testing
  image: pyrocko-nest-debian-12
  pull: never
  when:
    branch:
    - candidate
    - packaging
    - pip
  commands:
  - bash maintenance/pip/upload_wheels.sh testing
  environment:
    PYPI_USERNAME:
      from_secret: pypitest-username
    PYPI_PASSWORD:
      from_secret: pypitest-password

- name: upload
  image: pyrocko-nest-debian-12
  pull: never
  when:
    branch:
    - release
    - deploy-pip
  commands:
  - bash maintenance/pip/upload_wheels.sh live
  environment:
    PYPI_USERNAME:
      from_secret: pypi-username
    PYPI_PASSWORD:
      from_secret: pypi-password

---

kind: pipeline
type: docker
name: package-pip-manylinux2014

trigger:
  branch:
  - release
  - candidate
  - packaging
  - pip
  - deploy-pip

steps:
- name: build
  image: quay.io/pypa/manylinux2014_x86_64
  commands:
  - maintenance/pip/build_wheels.sh
  environment:
    PLAT: manylinux2014_x86_64

- name: test-pure
  image: pyrocko-util
  pull: never
  when:
    branch:
      exclude:
      - release
      - deploy-pip
  commands:
  - pip3 install -f dist pyrocko --no-index --no-deps --break-system-packages
  - pip3 install -f dist pyrocko --break-system-packages
  - pip3 install --only-binary=PyQt5 PyQt5 jinja2 pytest --break-system-packages
  - xvfb-run -s '-screen 0 640x480x24' python3 -m pytest -v

- name: test-mixed
  image: pyrocko-fat-nest-debian-12
  pull: never
  when:
    branch:
      exclude:
      - release
      - deploy-pip
  commands:
  - pip3 install -f dist --no-index --no-deps pyrocko --break-system-packages
  - xvfb-run -s '-screen 0 640x480x24' python3 -m pytest -v

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh dist/ ${DRONE_COMMIT}/wheels/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

- name: upload-testing
  image: pyrocko-nest-debian-12
  pull: never
  when:
    branch:
    - candidate
    - packaging
    - pip
  commands:
  - bash maintenance/pip/upload_wheels.sh testing
  environment:
    PYPI_USERNAME:
      from_secret: pypitest-username
    PYPI_PASSWORD:
      from_secret: pypitest-password

- name: upload
  image: pyrocko-nest-debian-12
  pull: never
  when:
    branch:
    - release
    - deploy-pip
  commands:
  - bash maintenance/pip/upload_wheels.sh live
  environment:
    PYPI_USERNAME:
      from_secret: pypi-username
    PYPI_PASSWORD:
      from_secret: pypi-password

---

kind: pipeline
type: exec
name: package-pip-windows

trigger:
  branch:
  - release
  - candidate
  - packaging
  - pip
  - deploy-pip

platform:
  os: windows

steps:
- name: build
  commands:
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\Lib\\site-packages\\pyrocko
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py38
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py39
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py310
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py311
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py312
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py313

  - conda create -y -n py38 python=3.8 m2-tar m2-gzip m2-patch setuptools pip numpy=1.14
  - conda run --no-capture-output -n py38 python -m pip wheel -v -w dist "--only-binary=:all:" .

  - conda create -y -n py39 python=3.9 m2-tar m2-gzip m2-patch setuptools pip numpy=1.16
  - conda run --no-capture-output -n py39 python -m pip wheel -v -w dist "--only-binary=:all:" .

  - conda create -y -n py310 python=3.10 m2-tar m2-gzip m2-patch setuptools pip numpy=1.21
  - conda run --no-capture-output -n py310 python -m pip wheel -v -w dist "--only-binary=:all:" .

  - conda create -y -n py311 python=3.11 m2-tar m2-gzip m2-patch setuptools pip numpy=1.22
  - conda run --no-capture-output -n py311 python -m pip wheel -v -w dist "--only-binary=:all:" .

  - conda create -y -n py312 python=3.12 m2-tar m2-gzip m2-patch setuptools pip numpy>2
  - conda run --no-capture-output -n py312 python -m pip wheel -v -w dist "--only-binary=:all:" .

  - conda create -y -n py313 python=3.13 m2-tar m2-gzip m2-patch setuptools pip numpy>2
  - conda run --no-capture-output -n py313 python -m pip wheel -v -w dist "--only-binary=:all:" .

- name: upload-testing
  when:
    branch:
    - candidate
    - packaging
    - pip
  commands:
  - pip install twine
  - bash maintenance/pip/upload_wheels.sh testing
  environment:
    PYPI_USERNAME:
      from_secret: pypitest-username
    PYPI_PASSWORD:
      from_secret: pypitest-password

- name: upload
  when:
    branch:
    - release
    - deploy-pip
  commands:
  - pip install twine
  - bash maintenance/pip/upload_wheels.sh live
  environment:
    PYPI_USERNAME:
      from_secret: pypi-username
    PYPI_PASSWORD:
      from_secret: pypi-password

- name: cleanup
  commands:
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\Lib\\site-packages\\pyrocko
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py38
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py39
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py310
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py311
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py312
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Users\\IEUser\\miniconda3\\envs\\py313

---

kind: pipeline
type: exec
name: package-pip-osx-universal2

trigger:
  branch:
  - release
  - candidate
  - packaging
  - pip
  - deploy-pip

platform:
  os: darwin
  arch: arm64

steps:
- name: build-3.13
  commands:
  - mkdir -p wheels
  - /usr/local/bin/python3.13 -m venv venv-3.13
  - venv-3.13/bin/python -m pip install --upgrade pip
  - venv-3.13/bin/python -m pip install wheel
  - venv-3.13/bin/python -m pip wheel -v . -w dist "--only-binary=:all:"
- name: build-3.12
  commands:
  - mkdir -p wheels
  - /usr/local/bin/python3.12 -m venv venv-3.12
  - venv-3.12/bin/python -m pip install --upgrade pip
  - venv-3.12/bin/python -m pip install wheel
  - venv-3.12/bin/python -m pip wheel -v . -w dist "--only-binary=:all:"
- name: build-3.11
  commands:
  - mkdir -p wheels
  - /usr/local/bin/python3.11 -m venv venv-3.11
  - venv-3.11/bin/python -m pip install --upgrade pip
  - venv-3.11/bin/python -m pip install wheel
  - venv-3.11/bin/python -m pip wheel -v . -w dist "--only-binary=:all:"
- name: build-3.10
  commands:
  - mkdir -p wheels
  - /usr/local/bin/python3.10 -m venv venv-3.10
  - venv-3.10/bin/python -m pip install --upgrade pip
  - venv-3.10/bin/python -m pip install wheel
  - venv-3.10/bin/python -m pip wheel -v . -w dist "--only-binary=:all:"

- name: upload-testing
  when:
    branch:
    - candidate
    - packaging
    - pip
  commands:
  - /usr/local/bin/python3.11 -m pip install twine
  - bash maintenance/pip/upload_wheels.sh testing
  environment:
    TWINE: "/usr/local/bin/python3.11 -m twine"
    PYPI_USERNAME:
      from_secret: pypitest-username
    PYPI_PASSWORD:
      from_secret: pypitest-password

- name: upload
  when:
    branch:
    - release
    - deploy-pip
  commands:
  - /usr/local/bin/python3.11 -m pip install twine
  - bash maintenance/pip/upload_wheels.sh live
  environment:
    TWINE: "/usr/local/bin/python3.11 -m twine"
    PYPI_USERNAME:
      from_secret: pypi-username
    PYPI_PASSWORD:
      from_secret: pypi-password

---

kind: pipeline
type: docker
name: package-conda-linux

trigger:
  branch:
    - candidate
    - packaging
    - release
    - conda
    - deploy-conda

platform:
  os: linux
  arch: amd64

steps:
- name: build-test
  image: quay.io/pypa/manylinux2014_x86_64
  commands:
  - cd maintenance/conda
  - ./build_packages.sh dryrun
  when:
    branch:
      - candidate
      - packaging
      - conda

- name: build-test-upload
  image: quay.io/pypa/manylinux2014_x86_64
  commands:
  - cd maintenance/conda
  - ./build_packages.sh upload
  environment:
    CONDA_USERNAME:
      from_secret: conda-username
    CONDA_PASSWORD:
      from_secret: conda-password
  when:
    branch:
      - release
      - deploy-conda

---

kind: pipeline
type: exec
name: package-conda-osx-64-arm64

trigger:
  branch:
    - candidate
    - packaging
    - release
    - conda
    - deploy-conda

platform:
  os: darwin
  arch: arm64

steps:

- name: build-test-arm64
  commands:
  - cd maintenance/conda
  - cp /Users/drone/.conda/conda_build_config.yaml .
  - /Users/drone/miniconda3_arm64/bin/conda run --no-capture-output -n base bash build_packages_osx_arm64.sh dryrun
  when:
    branch:
      - candidate
      - packaging
      - conda

- name: build-test-64
  commands:
  - cd maintenance/conda
  - cp /Users/drone/.conda/conda_build_config.yaml .
  - /Users/drone/miniconda3_x86_64/bin/conda run --no-capture-output -n base bash build_packages_osx_64.sh dryrun
  when:
    branch:
      - candidate
      - packaging
      - conda

- name: build-test-upload-arm64
  commands:
  - cd maintenance/conda
  - cp /Users/drone/.conda/conda_build_config.yaml .
  - /Users/drone/miniconda3_arm64/bin/conda run --no-capture-output -n base bash build_packages_osx_arm64.sh upload
  environment:
    CONDA_USERNAME:
      from_secret: conda-username
    CONDA_PASSWORD:
      from_secret: conda-password
  when:
    branch:
      - release
      - deploy-conda

- name: build-test-upload-64
  commands:
  - cd maintenance/conda
  - cp /Users/drone/.conda/conda_build_config.yaml .
  - /Users/drone/miniconda3_x86_64/bin/conda run --no-capture-output -n base bash build_packages_osx_64.sh upload
  environment:
    CONDA_USERNAME:
      from_secret: conda-username
    CONDA_PASSWORD:
      from_secret: conda-password
  when:
    branch:
      - release
      - deploy-conda

- name: cleanup
  commands:
  - /Users/drone/miniconda3_arm64/bin/conda build purge-all
  - /Users/drone/miniconda3_x86_64/bin/conda build purge-all
  when:
    status:
    - failure
    - success

---

kind: pipeline
type: exec
name: package-conda-windows

trigger:
  branch:
    - candidate
    - packaging
    - release
    - conda
    - deploy-conda

platform:
  os: windows

steps:
- name: build-test
  commands:
  - cd maintenance\\conda\\
  - conda run --no-capture-output -n base bash build_packages_windows.sh dryrun
  when:
    branch:
      - candidate
      - packaging
      - conda

- name: build-test-upload
  commands:
  - cd maintenance\\conda\\
  - conda run --no-capture-output -n base bash build_packages_windows.sh upload
  environment:
    CONDA_USERNAME:
      from_secret: conda-username
    CONDA_PASSWORD:
      from_secret: conda-password
  when:
    branch:
      - release
      - deploy-conda

- name: cleanup
  commands:
  - conda build purge-all
  - Remove-Item -Recurse -Force -ErrorAction Ignore C:\\Windows\\Temp\\pyrocko*
  when:
    status:
    - failure
    - success

---

kind: pipeline
type: docker
name: package-deb-debian-11

steps:
- name: build
  image: pyrocko-build-deb-debian-11
  pull: never
  commands:
  - maintenance/deb/build.sh 1 debian-11

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh deb-packages-debian-11 ${DRONE_COMMIT}/deb/debian-11
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: docker
name: package-deb-debian-12

steps:
- name: build
  image: pyrocko-build-deb-debian-12
  pull: never
  commands:
  - maintenance/deb/build.sh 1 debian-12

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh deb-packages-debian-12 ${DRONE_COMMIT}/deb/debian-12
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: docker
name: package-deb-ubuntu-20.04

steps:
- name: build
  image: pyrocko-build-deb-ubuntu-20.04
  pull: never
  commands:
  - maintenance/deb/build.sh 1 ubuntu-20.04

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh deb-packages-ubuntu-20.04 ${DRONE_COMMIT}/deb/ubuntu-20.04
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: docker
name: package-deb-ubuntu-22.04

steps:
- name: build
  image: pyrocko-build-deb-ubuntu-22.04
  pull: never
  commands:
  - maintenance/deb/build.sh 1 ubuntu-22.04

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh deb-packages-ubuntu-22.04 ${DRONE_COMMIT}/deb/ubuntu-22.04
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: docker
name: package-deb-ubuntu-24.04

steps:
- name: build
  image: pyrocko-build-deb-ubuntu-24.04
  pull: never
  commands:
  - maintenance/deb/build.sh 1 ubuntu-24.04

- name: stage
  image: pyrocko-util
  pull: never
  commands:
  - maintenance/drone-rsync.sh deb-packages-ubuntu-24.04 ${DRONE_COMMIT}/deb/ubuntu-24.04
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: exec
name: app-osx

platform:
  os: darwin
  arch: arm64

trigger:
  branch:
    - app
    - candidate
    - packaging
    - release

steps:
- name: build-arm64
  commands:
   - maintenance/osx-app/build.sh
- name: build-x86_64
  commands:
   - maintenance/osx-app/build_x86_64.sh
- name: stage
  commands:
  - maintenance/drone-rsync.sh dist/ ${DRONE_COMMIT}/apps/
  environment:
    RSYNC_HOST:
      from_secret: rsync-host
    RSYNC_USER:
      from_secret: rsync-user
    RSYNC_KEY:
      from_secret: rsync-key

---

kind: pipeline
type: docker
name: notify-hive

depends_on:
- flake8
- docs
- test-coverage
- test-windows
- test-osx-arm64
- package-pip-sdist
- package-pip-manylinux2014
- package-pip-windows
- package-conda-linux
- package-conda-osx-64-arm64
- package-conda-windows
- package-deb-debian-11
- package-deb-debian-12
- package-deb-ubuntu-20.04
- package-deb-ubuntu-22.04
- package-deb-ubuntu-24.04
- app-osx

trigger:
  status:
  - success
  - failure

steps:
- name: post
  image: pyrocko-nest-debian-12
  pull: never
  commands:
  - maintenance/drone-matterpost.py
  environment:
    WEBHOOK:
      from_secret: hive-webhook
